{
  "id": "e32785e1-0d7e-4f94-9ddf-7dd3cf9826a1",
  "prevId": "af6a5d09-6eab-411c-9ce2-e2d6af990dea",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.comment_votes": {
      "name": "comment_votes",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "comment_id": {
          "name": "comment_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "vote_type": {
          "name": "vote_type",
          "type": "vote_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "comment_votes_user_id_user_id_fk": {
          "name": "comment_votes_user_id_user_id_fk",
          "tableFrom": "comment_votes",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "comment_votes_comment_id_comments_id_fk": {
          "name": "comment_votes_comment_id_comments_id_fk",
          "tableFrom": "comment_votes",
          "tableTo": "comments",
          "columnsFrom": [
            "comment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "comment_votes_user_id_comment_id_pk": {
          "name": "comment_votes_user_id_comment_id_pk",
          "columns": [
            "user_id",
            "comment_id"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.comments": {
      "name": "comments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "author_id": {
          "name": "author_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "reply_to_id": {
          "name": "reply_to_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "vote_count": {
          "name": "vote_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {
        "comment_created_at_idx": {
          "name": "comment_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "comments_author_id_user_id_fk": {
          "name": "comments_author_id_user_id_fk",
          "tableFrom": "comments",
          "tableTo": "user",
          "columnsFrom": [
            "author_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "comments_game_id_processed_games_id_fk": {
          "name": "comments_game_id_processed_games_id_fk",
          "tableFrom": "comments",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "comments_reply_to_id_comments_id_fk": {
          "name": "comments_reply_to_id_comments_id_fk",
          "tableFrom": "comments",
          "tableTo": "comments",
          "columnsFrom": [
            "reply_to_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.friend_requests": {
      "name": "friend_requests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "from_user_id": {
          "name": "from_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "to_user_id": {
          "name": "to_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "friend_request_created_at_idx": {
          "name": "friend_request_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "friend_requests_from_user_id_user_id_fk": {
          "name": "friend_requests_from_user_id_user_id_fk",
          "tableFrom": "friend_requests",
          "tableTo": "user",
          "columnsFrom": [
            "from_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "friend_requests_to_user_id_user_id_fk": {
          "name": "friend_requests_to_user_id_user_id_fk",
          "tableFrom": "friend_requests",
          "tableTo": "user",
          "columnsFrom": [
            "to_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.friendships": {
      "name": "friendships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "friend_id": {
          "name": "friend_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "user_friend_unique_idx": {
          "name": "user_friend_unique_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "friend_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "friend_id_idx": {
          "name": "friend_id_idx",
          "columns": [
            {
              "expression": "friend_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "friendships_user_id_user_id_fk": {
          "name": "friendships_user_id_user_id_fk",
          "tableFrom": "friendships",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "friendships_friend_id_user_id_fk": {
          "name": "friendships_friend_id_user_id_fk",
          "tableFrom": "friendships",
          "tableTo": "user",
          "columnsFrom": [
            "friend_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.achievements": {
      "name": "achievements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "path": {
          "name": "path",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "achievement_game_id_idx": {
          "name": "achievement_game_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "achievements_game_id_processed_games_id_fk": {
          "name": "achievements_game_id_processed_games_id_fk",
          "tableFrom": "achievements",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.content_descriptors": {
      "name": "content_descriptors",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "ids": {
          "name": "ids",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "content_descriptors_game_id_idx": {
          "name": "content_descriptors_game_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "content_descriptors_game_id_processed_games_id_fk": {
          "name": "content_descriptors_game_id_processed_games_id_fk",
          "tableFrom": "content_descriptors",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "content_descriptors_game_id_unique": {
          "name": "content_descriptors_game_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "game_id"
          ]
        }
      }
    },
    "public.demos": {
      "name": "demos",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "appid": {
          "name": "appid",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "demo_game_id_appid_idx": {
          "name": "demo_game_id_appid_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "appid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "demos_game_id_processed_games_id_fk": {
          "name": "demos_game_id_processed_games_id_fk",
          "tableFrom": "demos",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.game_categories": {
      "name": "game_categories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "game_count": {
          "name": "game_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "is_english": {
          "name": "is_english",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "category_idx": {
          "name": "category_idx",
          "columns": [
            {
              "expression": "category",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.game_genres": {
      "name": "game_genres",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "genre": {
          "name": "genre",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "game_count": {
          "name": "game_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "is_english": {
          "name": "is_english",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "genre_idx": {
          "name": "genre_idx",
          "columns": [
            {
              "expression": "genre",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.game_votes": {
      "name": "game_votes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "vote_type": {
          "name": "vote_type",
          "type": "vote_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "vote_game_user_idx": {
          "name": "vote_game_user_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "game_votes_game_id_processed_games_id_fk": {
          "name": "game_votes_game_id_processed_games_id_fk",
          "tableFrom": "game_votes",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "game_votes_user_id_user_id_fk": {
          "name": "game_votes_user_id_user_id_fk",
          "tableFrom": "game_votes",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.metacritics": {
      "name": "metacritics",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "metacritic_game_id_idx": {
          "name": "metacritic_game_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "metacritics_game_id_processed_games_id_fk": {
          "name": "metacritics_game_id_processed_games_id_fk",
          "tableFrom": "metacritics",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "metacritics_game_id_unique": {
          "name": "metacritics_game_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "game_id"
          ]
        }
      }
    },
    "public.movies": {
      "name": "movies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "thumbnail": {
          "name": "thumbnail",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "webm": {
          "name": "webm",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "mp4": {
          "name": "mp4",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "highlight": {
          "name": "highlight",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "movie_game_id_id_idx": {
          "name": "movie_game_id_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "movies_game_id_processed_games_id_fk": {
          "name": "movies_game_id_processed_games_id_fk",
          "tableFrom": "movies",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.package_groups": {
      "name": "package_groups",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "selection_text": {
          "name": "selection_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "save_text": {
          "name": "save_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "display_type": {
          "name": "display_type",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "is_recurring_subscription": {
          "name": "is_recurring_subscription",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "package_group_game_id_idx": {
          "name": "package_group_game_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "package_groups_game_id_processed_games_id_fk": {
          "name": "package_groups_game_id_processed_games_id_fk",
          "tableFrom": "package_groups",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.price_overviews": {
      "name": "price_overviews",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": true
        },
        "initial": {
          "name": "initial",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "final": {
          "name": "final",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "discount_percent": {
          "name": "discount_percent",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "initial_formatted": {
          "name": "initial_formatted",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "final_formatted": {
          "name": "final_formatted",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "price_overview_game_id_idx": {
          "name": "price_overview_game_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "price_overviews_game_id_processed_games_id_fk": {
          "name": "price_overviews_game_id_processed_games_id_fk",
          "tableFrom": "price_overviews",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "price_overviews_game_id_unique": {
          "name": "price_overviews_game_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "game_id"
          ]
        }
      }
    },
    "public.processed_games": {
      "name": "processed_games",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "steam_appid": {
          "name": "steam_appid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "short_description": {
          "name": "short_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "required_age": {
          "name": "required_age",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "is_free": {
          "name": "is_free",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "header_image": {
          "name": "header_image",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "release_date": {
          "name": "release_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "developers": {
          "name": "developers",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "genres": {
          "name": "genres",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "categories": {
          "name": "categories",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "vote_count": {
          "name": "vote_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "nsfw": {
          "name": "nsfw",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "dlc": {
          "name": "dlc",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "detailed_description": {
          "name": "detailed_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "about_the_game": {
          "name": "about_the_game",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "supported_languages": {
          "name": "supported_languages",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "reviews": {
          "name": "reviews",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "capsule_image": {
          "name": "capsule_image",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "capsule_image_v5": {
          "name": "capsule_image_v5",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "publishers": {
          "name": "publishers",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "recommendations": {
          "name": "recommendations",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "background": {
          "name": "background",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "background_raw": {
          "name": "background_raw",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "packages": {
          "name": "packages",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ext_user_account_notice": {
          "name": "ext_user_account_notice",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "legal_notice": {
          "name": "legal_notice",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "controller_support": {
          "name": "controller_support",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "fullgame": {
          "name": "fullgame",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additional_data": {
          "name": "additional_data",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(3072)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "steam_appid_idx": {
          "name": "steam_appid_idx",
          "columns": [
            {
              "expression": "steam_appid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "main_query_idx": {
          "name": "main_query_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "vote_count",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "release_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "genre_category_idx": {
          "name": "genre_category_idx",
          "columns": [
            {
              "expression": "genres",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "categories",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "search_vector_idx": {
          "name": "search_vector_idx",
          "columns": [
            {
              "expression": "(\n                setweight(to_tsvector('english', \"name\"), 'A') ||\n                setweight(to_tsvector('english', \"short_description\"), 'B')\n            )",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "release_date_idx": {
          "name": "release_date_idx",
          "columns": [
            {
              "expression": "release_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "name_idx": {
          "name": "name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.ratings": {
      "name": "ratings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "source": {
          "name": "source",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "rating_generated": {
          "name": "rating_generated",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "rating": {
          "name": "rating",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "required_age": {
          "name": "required_age",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "banned": {
          "name": "banned",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "use_age_gate": {
          "name": "use_age_gate",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "descriptors": {
          "name": "descriptors",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "rating_game_id_source_idx": {
          "name": "rating_game_id_source_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ratings_game_id_processed_games_id_fk": {
          "name": "ratings_game_id_processed_games_id_fk",
          "tableFrom": "ratings",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.screenshots": {
      "name": "screenshots",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "path_thumbnail": {
          "name": "path_thumbnail",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "path_full": {
          "name": "path_full",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "screenshot_game_id_id_idx": {
          "name": "screenshot_game_id_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "screenshots_game_id_processed_games_id_fk": {
          "name": "screenshots_game_id_processed_games_id_fk",
          "tableFrom": "screenshots",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.subs": {
      "name": "subs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "package_group_id": {
          "name": "package_group_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "package_id": {
          "name": "package_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "percent_savings_text": {
          "name": "percent_savings_text",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "percent_savings": {
          "name": "percent_savings",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "option_text": {
          "name": "option_text",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "option_description": {
          "name": "option_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "can_get_free_license": {
          "name": "can_get_free_license",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "is_free_license": {
          "name": "is_free_license",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "price_in_cents_with_discount": {
          "name": "price_in_cents_with_discount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "sub_package_group_id_idx": {
          "name": "sub_package_group_id_idx",
          "columns": [
            {
              "expression": "package_group_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subs_package_group_id_package_groups_id_fk": {
          "name": "subs_package_group_id_package_groups_id_fk",
          "tableFrom": "subs",
          "tableTo": "package_groups",
          "columnsFrom": [
            "package_group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.support_info": {
      "name": "support_info",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "game_id": {
          "name": "game_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "support_info_game_id_idx": {
          "name": "support_info_game_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "support_info_game_id_processed_games_id_fk": {
          "name": "support_info_game_id_processed_games_id_fk",
          "tableFrom": "support_info",
          "tableTo": "processed_games",
          "columnsFrom": [
            "game_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "support_info_game_id_unique": {
          "name": "support_info_game_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "game_id"
          ]
        }
      }
    },
    "public.account": {
      "name": "account",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "session_state": {
          "name": "session_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "account_userId_user_id_fk": {
          "name": "account_userId_user_id_fk",
          "tableFrom": "account",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "account_provider_providerAccountId_pk": {
          "name": "account_provider_providerAccountId_pk",
          "columns": [
            "provider",
            "providerAccountId"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.authenticator": {
      "name": "authenticator",
      "schema": "",
      "columns": {
        "credentialID": {
          "name": "credentialID",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialPublicKey": {
          "name": "credentialPublicKey",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "counter": {
          "name": "counter",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "credentialDeviceType": {
          "name": "credentialDeviceType",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialBackedUp": {
          "name": "credentialBackedUp",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "transports": {
          "name": "transports",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "authenticator_userId_user_id_fk": {
          "name": "authenticator_userId_user_id_fk",
          "tableFrom": "authenticator",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "authenticator_userId_credentialID_pk": {
          "name": "authenticator_userId_credentialID_pk",
          "columns": [
            "userId",
            "credentialID"
          ]
        }
      },
      "uniqueConstraints": {
        "authenticator_credentialID_unique": {
          "name": "authenticator_credentialID_unique",
          "nullsNotDistinct": false,
          "columns": [
            "credentialID"
          ]
        }
      }
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "sessionToken": {
          "name": "sessionToken",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_userId_user_id_fk": {
          "name": "session_userId_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "credits": {
          "name": "credits",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 10
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_username_unique": {
          "name": "user_username_unique",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        },
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      }
    },
    "public.verificationToken": {
      "name": "verificationToken",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "verificationToken_identifier_token_pk": {
          "name": "verificationToken_identifier_token_pk",
          "columns": [
            "identifier",
            "token"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.roll_results": {
      "name": "roll_results",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "room_id": {
          "name": "room_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "roll_number": {
          "name": "roll_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "games": {
          "name": "games",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "room_id_roll_number_idx": {
          "name": "room_id_roll_number_idx",
          "columns": [
            {
              "expression": "room_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "roll_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.rooms": {
      "name": "rooms",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "host_id": {
          "name": "host_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "room_id": {
          "name": "room_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "queued_users": {
          "name": "queued_users",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "allowed_users": {
          "name": "allowed_users",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "members": {
          "name": "members",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "room_id_idx": {
          "name": "room_id_idx",
          "columns": [
            {
              "expression": "room_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "rooms_room_id_unique": {
          "name": "rooms_room_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "room_id"
          ]
        }
      }
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}